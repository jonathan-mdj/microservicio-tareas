#!/usr/bin/env python3
"""
Script para probar la configuraci√≥n de Render localmente
"""
import os
import sys

# Simular variables de entorno de Render
os.environ['PORT'] = '10000'
os.environ['FLASK_ENV'] = 'production'

print("üîç SIMULANDO CONFIGURACI√ìN DE RENDER")
print("=" * 50)
print(f"PORT: {os.getenv('PORT')}")
print(f"FLASK_ENV: {os.getenv('FLASK_ENV')}")

# Probar la l√≥gica de importaci√≥n del API Gateway
print("\nüîß PROBANDO IMPORTACI√ìN DE CONFIGURACI√ìN:")
print("-" * 30)

if os.getenv('PORT') or os.getenv('FLASK_ENV') == 'production':
    print("‚úÖ Condici√≥n de Render detectada")
    try:
        from config_production import production_config as config
        print("üöÄ [GATEWAY] FORZANDO configuraci√≥n de PRODUCCI√ìN (Render detectado)")
        print(f"   Tipo: {type(config).__name__}")
        print(f"   M√≥dulo: {config.__module__}")
        print(f"   CORS Origins: {config.CORS_ORIGINS}")
    except Exception as e:
        print(f"‚ùå Error importando config_production: {e}")
        sys.exit(1)
else:
    print("‚ùå Condici√≥n de Render NO detectada")
    try:
        from config import config
        print("üîß [GATEWAY] Usando configuraci√≥n de DESARROLLO")
        print(f"   Tipo: {type(config).__name__}")
        print(f"   M√≥dulo: {config.__module__}")
        print(f"   CORS Origins: {config.CORS_ORIGINS}")
    except Exception as e:
        print(f"‚ùå Error importando config: {e}")
        sys.exit(1)

print("\n" + "=" * 50)
print("‚úÖ Configuraci√≥n verificada correctamente")
